// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  // Vim motions in dock elements.
  {
    "bindings": {
      "ctrl-/": "workspace::ToggleRightDock"
    }
  },
  {
    "context": "Dock",
    "bindings": {
      "ctrl-w h": "workspace::ActivatePaneLeft",
      "ctrl-w l": "workspace::ActivatePaneRight",
      "ctrl-w k": "workspace::ActivatePaneUp",
      "ctrl-w j": "workspace::ActivatePaneDown",
      "ctrl-w left": "workspace::ActivatePaneLeft",
      "ctrl-w down": "workspace::ActivatePaneRight",
      "ctrl-w up": "workspace::ActivatePaneUp",
      "ctrl-w right": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-w n": "workspace::NewTerminal",
      "ctrl-w t": "workspace::NewTerminal",
      "ctrl-w c": "pane::CloseActiveItem",
      "ctrl-w q": "pane::CloseActiveItem"
    }
  },
  {
    "context": "VimControl && !menu || ChangesList || EmptyPane || SharedScreen || MarkdownPreview || KeyContextView || Welcome",
    "bindings": {
      "space .": "file_finder::Toggle",
      "space f": "file_finder::Toggle",
      "space space": "file_finder::Toggle",
      "space s": "outline::Toggle",
      "space shift-s": "project_symbols::Toggle",
      "space p": "projects::OpenRecent",
      "space b": "workspace::ToggleLeftDock",
      // Panels.
      "space e": "project_panel::ToggleFocus",
      "space o g": "git_panel::ToggleFocus",
      "space o c": "collab_panel::ToggleFocus",
      "space o o": "outline_panel::ToggleFocus",
      "space o n": "notification_panel::ToggleFocus",
      "space t": "terminal_panel::ToggleFocus",
      "space a": "agent::ToggleFocus",
      "space j": "journal::NewJournalEntry",
      // Editor.
      "space n": "workspace::NewFile",
      "space r": "editor::Rename",
      "tab": "editor::ToggleFold",
      // Views.
      "space /": "pane::DeploySearch",
      "space x": "diagnostics::Deploy",
      "space u z": "workspace::ToggleZoom",
      "space z": "workspace::ToggleCenteredLayout",
      // Git.
      "space g b": "editor::ToggleGitBlameInline",
      "space g h": "editor::ToggleSelectedDiffHunks",
      "space g B": "git::Blame",
      "space g d": "git::Diff",
      "space g s": "git::ToggleStaged",
      "space g r": "git::Restore",
      // Settings.
      "space c": "zed::OpenSettings",
      "space k": "zed::OpenKeymap",
      "space u w": "editor::ToggleSoftWrap",
      "space u m": "editor::ToggleMinimap",
      "space u M": "vim::ToggleMarksView",
      "space u i": "editor::ToggleInlayHints",
      "space u d": "editor::ToggleDiagnostics",
      // Tasks.
      "space w": "task::Spawn",
      "space g g": ["task::Spawn", { "task_name": "Lazygit" }]
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "n": "project_panel::NewFile",
      "N": "project_panel::NewDirectory",
      "d": "project_panel::Delete",
      "r": "project_panel::Rename",
      "x": "project_panel::Cut",
      "y": "project_panel::Copy",
      "p": "project_panel::Paste",
      "c": "workspace::CopyRelativePath",
      "C": "workspace::CopyPath"
    }
  },
  // Subward motions.
  {
    "context": "VimControl && !menu && vim_mode != operator",
    "bindings": {
      "w": "vim::NextSubwordStart",
      "b": "vim::PreviousSubwordStart",
      "e": "vim::NextSubwordEnd",
      "g e": "vim::PreviousSubwordEnd"
    }
  },
  // Surround in visual mode.
  {
    "context": "vim_mode == visual",
    "bindings": {
      "s": "vim::PushAddSurrounds",
      "ctrl-shift->": "vim::Indent",
      "ctrl-shift-<": "vim::Outdent",
      ">": ["workspace::SendKeystrokes", "ctrl-shift-> g v"],
      "<": ["workspace::SendKeystrokes", "ctrl-shift-< g v"]
    }
  }
]
